{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "mystorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "myVmName": {
      "type": "string",
      "minLength": 1
    },
    "myVmAdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "myVmAdminPassword": {
      "type": "securestring"
    },
    "myVmWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter"
    },
    "myVmIsADevMachine": {
      "type": "String",
      "defaultValue": "Yes",
       "allowedValues": [
      "Yes",
      "No"
     ],
      "metadata": {
            "description": "If Yes, it installs Chocolatey, Git, Visual Studio Code and a few other niceties"
        }
    }
  },
  "variables": {
    "myVmpipDnsName": "[parameters('myVmName')]",
    "myVm-vnetPrefix": "10.11.0.0/16",
    "myVm-vnetSubnet1Name": "servers",
    "myVm-vnetSubnet1Prefix": "10.11.1.0/24",
    "mystorageName": "[concat('mydisks', uniqueString(resourceGroup().id))]",
    "myVmImagePublisher": "MicrosoftWindowsServer",
    "myVmImageOffer": "WindowsServer",
    "myVmOSDiskName": "myVmOSDisk",
    "myVmVmSize": "Standard_D2_v2",
    "myVmVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'myVm-vnet')]",
    "myVmSubnetRef": "[concat(variables('myVmVnetID'), '/subnets/', variables('myVm-vnetSubnet1Name'))]",
    "myVmStorageAccountContainerName": "vhds",
    "myVmNicName": "[concat(parameters('myVmName'), 'NetworkInterface')]",
    "myVmpipName": "myVmpip",
    "hostDNSNameScriptArgument": "[concat('*.',resourceGroup().location,'.cloudapp.azure.com')]"
  },
  "resources": [
    {
      "name": "myVm-vnet",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "myVm-vnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('myVm-vnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('myVm-vnetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('myVm-vnetSubnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('mystorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('mystorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "mystorage"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('myVmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'myVm-vnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('myVmpipName'))]"
      ],
      "tags": {
        "displayName": "myVmNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('myVmSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('myVmpipName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('myVmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('mystorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('myVmNicName'))]"
      ],
      "tags": {
        "displayName": "myVm"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('myVmVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('myVmName')]",
          "adminUsername": "[parameters('myVmAdminUsername')]",
          "adminPassword": "[parameters('myVmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('myVmImagePublisher')]",
            "offer": "[variables('myVmImageOffer')]",
            "sku": "[parameters('myVmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "myVmOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('mystorageName')), '2016-01-01').primaryEndpoints.blob, variables('myVmStorageAccountContainerName'), '/', variables('myVmOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('myVmNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "mycustom",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('myVmName'))]"
          ],
          "tags": {
            "displayName": "mywinrm"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file Bootstrap.ps1 ',variables('hostDNSNameScriptArgument') ,' ',parameters('myVmIsADevMachine'))]",
              "fileUris": [
                "https://raw.githubusercontent.com/jacqinthebox/presentations/master/arm-templates/vm-windows-dev/Bootstrap.ps1",
                "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vm-winrm-windows/makecert.exe",
                "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vm-winrm-windows/winrmconf.cmd"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "[variables('myVmpipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "myVmpip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('myVmpipDnsName')]"
        }
      }
    }
  ],
  "outputs": {}
}












  

